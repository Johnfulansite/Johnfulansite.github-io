<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王罴虎的杂物堆</title>
  
  <subtitle>生死有命，谋事在人。</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-19T04:38:54.747Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>王罴虎</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建博客踩得坑</title>
    <link href="http://example.com/2023/03/12/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%BE%97%E5%9D%91/"/>
    <id>http://example.com/2023/03/12/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%BE%97%E5%9D%91/</id>
    <published>2023-03-12T09:46:15.000Z</published>
    <updated>2023-03-19T04:38:54.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用hexo搭建博客踩的一些坑"><a href="#使用hexo搭建博客踩的一些坑" class="headerlink" title="使用hexo搭建博客踩的一些坑"></a>使用hexo搭建博客踩的一些坑</h1><p>记录在使用hexo搭建博客史遇到的一些问题。<br>&lt;—-more—-&gt;</p><h2 id="下载安装nodejs在配置环境变量时的错误"><a href="#下载安装nodejs在配置环境变量时的错误" class="headerlink" title="下载安装nodejs在配置环境变量时的错误"></a>下载安装nodejs在配置环境变量时的错误</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;使用hexo搭建博客踩的一些坑&quot;&gt;&lt;a href=&quot;#使用hexo搭建博客踩的一些坑&quot; class=&quot;headerlink&quot; title=&quot;使用hexo搭建博客踩的一些坑&quot;&gt;&lt;/a&gt;使用hexo搭建博客踩的一些坑&lt;/h1&gt;&lt;p&gt;记录在使用hexo搭建博客史遇到的一</summary>
      
    
    
    
    <category term="IT技术" scheme="http://example.com/categories/IT%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络笔记一</title>
    <link href="http://example.com/2023/03/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B023.04.30/"/>
    <id>http://example.com/2023/03/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%94%E8%AE%B023.04.30/</id>
    <published>2023-03-12T09:46:15.000Z</published>
    <updated>2023-07-24T04:08:56.087Z</updated>
    
    <content type="html"><![CDATA[<p>#计算机网络的性能指标</p><p>速率：</p><pre><code>连接在网络上的主机在数字信道上传送比特的速率，也成为比特率或数据率；基本单位：bit/s(b/s,bps),常用单位：kb/s,Mb/s,Gb/s,Tb/s </code></pre><p>带宽：</p><pre><code>用来表示网络的通信线路所能传送数据的能力，因此网络带宽表示在单位时间内从网络中的某一点到另外=一点所能通过的通过的“最高数据率”，单位与速率单位相同</code></pre><p>吞吐量：</p><pre><code>吞吐量表示在单位时间内通过某个网洛（或信道、接口）的数据量；吞吐量北京常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能通过网络；吞吐量受网络的带宽或额定速率的限制</code></pre><p>时延：</p><pre><code>发送时延=分组长度（b）/发送速率（b/s）传播时延= 信道长度（m）/电磁波传播速率（m/s）在不同介质中电磁波的传播速率不同。处理时间：一般不便于计算</code></pre><p>时延带宽积：</p><pre><code> 传播时延和带宽的乘积； 若发送端持续发送数据，则再所发送的第一个比特即将到达终点时，发送端就已经发送了时延带宽积个比特；  链路的时延带宽积又称为一比特为单位的链路长度。</code></pre><p>往返时间RTT</p><pre><code> 在许多情况下，因特网上的信息不仅仅单方向传输，而是双向交互；   我们有时候需要知道双向交互一次所需要的时间；</code></pre><p>利用率</p><pre><code> 信道利用率：用来表示某信道奶粉只记得时间是被利用的，即有数据通过； 网络利用率：全网络利用率的加权平均； 利用率并非越高越好，当某信道的利用率增大时，该信道所引起的时延也会迅速增加 也不能使信道利用率太低，这会使得宝贵的通信资源被白白浪费</code></pre><p>丢包率</p><pre><code> 丢包率即分组丢失率，是指在一定的时间范围内，传输过程中丢失的分组数量与总分组数量的比率；   分组丢失的两个主要原因：分组误码，结点交换机缓存队列满（网络拥塞）</code></pre><p>#计算机网络体系分层的必要性</p><p>原理体系结构参考模型：</p><pre><code>                                                     原理体系结构                应用层             解决通过应用进程的交互来实现特定网络应用的问题                运输层             解决进程之间基于网络通信的问题                网络层            解决分组在多个网络上传输的问题（路由）                   数据链路层        解决分组在一个网络（或一段链路）上传输的问题                物理层            解决使用何种信号来传输比特的问题        </code></pre><p>OSI体系结构参考模型</p><pre><code>                                                      OSI参考模型                   应用层       解决通过应用进程之间的交互来实现特定网络应用的问题                   表示层       解决通信双方交换信息的表示问题                   会话层       解决进程之间进行会话的问题                   运输层       解决进程之间基于网络的通信问题                   网络层       解决分组在多个网络之间传输的问题（路由）                 数据链路层      解决分组在一个网络（或一段链路）上传输的问题                   物理层       解决使用何种信号来传输比特0/1的问题</code></pre><p>TCP&#x2F;IP参考模型</p><pre><code>                                                IP协议可以为各种网络应用提供服务                   应用层        HTTP...SMTP                       DNS...RTP                   运输层           TCP（有连接可靠的服务）    UDP（IP协议向其提供的是无连接不可靠的服务）                   网际层                           IP                 网络接口层       网络接口1         网络接口2   ...       网络接口3</code></pre><p>#数据链路层</p><p>封装成帧</p><pre><code>             封装成帧是指数据链路层给上层交付的协议数据单元添加帧头以及帧尾使之成为帧。                  帧头和帧尾中包含有重要的信息；                  帧头和帧尾的重要作用之一就是帧定界             透明传输是指数据链路层对上层交付的传输数据没有任何限制，就好像数据率链路层不存在一样            （这就体现了科学分析问题的方法：将复杂的问题拆解为一个一个独立的小问题，逐个击破。             计算机网络分层思想就是拆解封装，与java里面向对象抽取封装的思想本质上是一样的。             在计算机网络里将实现计算机网络通信的问题拆解成若干个子问题，再用封装的各个层级来解决它们，上层依赖于下层的服务，但下层对上层又是完全隐形的。             分层好处不止在于简化问题，同样也可以让研究者只专注于使用研究某一层级而不必对整个计算机网络都有实现都完全精通）             面向字节的物理链路使用字节填充（或称字符填充）的方法实现透明传输。             面向比特的物理链路使用比特填充的方法实现透明传输。             为了提高帧的传输速率，应当使帧的数据部分的长度尽可能地大一些。考虑到差错控制等多种因素，每一种数据链路层协议都规定了帧的数据部分的长度上线，即最大传送单元MTU（Maximum Tranfer Unit）</code></pre><p>3.4.1数据链路层里可靠传输的基本概念</p><p>使用差错检测技术（列如循环冗余检验CRC），接收方的数据链路层就可以检测出帧在传输过程中是否产生了误码（比特错误）</p><p>数据链路层向上层提供的服务类型</p><pre><code>             不可靠传输服务：仅仅丢弃有误码的帧，其他的什么也不做             可靠性传输服务：想办法发送端发送什么，接收端就接受什么</code></pre><p>一般情况下，有线链路的误码率比较低，为了减小开销，并不要求数据链路层向上提供可靠服务。即使出现了误码，可靠传输的问题尤其上层处理。</p><p>无线链路易受到干扰，误码率较高，因此要求数据链路层必须向上层提供可靠的服务</p><p>比特差错只是传输差错中的一种</p><p>从整个计算机网络体系结构来看，传输差错还包括分组丢失，分组失序，分组重复。</p><p>分组丢失，分组失序，分组重复，这些传输差错一般不会发生在数据链路层，而回出现在其上层</p><p>可靠传输在其他层，均可选择实现</p><p>可靠传输的实现比较复杂，开销也比较大，是否实现取决于应用的需求。（如类似于直播或者视频聊天之类的应用，就不需要使用可靠传输，传输层协议使用UDP用户数据报。因为此类应用具有实时性的要求，如果网络情况异常，仅仅发生卡顿，没有恢复数据的必要，因为如果强行追求恢复数据，那恢复后的数据也失去了其时效性）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#计算机网络的性能指标&lt;/p&gt;
&lt;p&gt;速率：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;连接在网络上的主机在数字信道上传送比特的速率，也成为比特率或数据率；

基本单位：bit/s(b/s,bps),常用单位：kb/s,Mb/s,Gb/s,Tb/s 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
